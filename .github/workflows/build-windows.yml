name: 纯净编译 scrcpy v3.3.1 客户端

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 安装 MSYS2 环境
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-ffmpeg
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-SDL2
            grep
            findutils

      - name: 拉取源码并彻底删除服务器目录
        shell: msys2 {0}
        run: |
          git clone https://github.com/Genymobile/scrcpy.git
          cd scrcpy
          git checkout v3.3.1
          
          # 彻底删除服务器目录
          rm -rf server/
          
          # 验证服务器目录已删除
          if [ -d "server" ]; then 
            echo "服务器目录未删除，失败！"
            exit 1
          fi

      - name: 智能修补主配置文件
        shell: msys2 {0}
        run: |
          cd scrcpy
          
          # 创建临时文件用于处理
          cp meson.build meson.build.tmp
          
          # 1. 删除所有直接引用server的行
          sed -i '/subdir.*server/d' meson.build.tmp
          
          # 2. 智能处理条件语句：删除包含server的if块
          # 使用awk识别完整的if-endif块
          awk '/^if.*server/{f=1} !f; /^endif/{f=0}' meson.build.tmp > meson.build.new
          
          # 3. 再次清理残留的server引用
          sed -i '/server/d' meson.build.new
          
          # 4. 使用新文件替换原文件
          mv meson.build.new meson.build
          
          # 5. 验证修改
          if grep -q "server[^s]" meson.build; then 
            echo "配置文件修补失败，仍存在server引用！"
            grep "server[^s]" meson.build
            exit 1
          else
            echo "配置文件修补成功，无server引用"
          fi
          
          # 保存处理后的文件用于调试
          cp meson.build meson.build.debug

      - name: 配置编译（仅客户端必需选项）
        shell: msys2 {0}
        run: |
          cd scrcpy
          meson setup build --buildtype=release \
            -Ddeps_ffmpeg=enabled \ 
            -Ddeps_libusb=enabled \
            -Ddeps_sdl2=enabled \ 
            -Dwith_systemd=disabled \
            -Dprebuilt_server=false

      - name: 编译scrcpy.exe
        shell: msys2 {0}
        run: |
          cd scrcpy
          ninja -C build
          
          # 确认exe生成
          if [ ! -f "build/src/scrcpy.exe" ]; then
            echo "编译失败，无exe文件"
            exit 1
          fi

      - name: 打包所有运行依赖
        shell: msys2 {0}
        run: |
          mkdir -p output
          cp scrcpy/build/src/scrcpy.exe output/
          cp /mingw64/bin/libusb-1.0.dll output/
          cp /mingw64/bin/avcodec-61.dll output/
          cp /mingw64/bin/avformat-61.dll output/
          cp /mingw64/bin/avutil-59.dll output/
          cp /mingw64/bin/swscale-8.dll output/
          cp /mingw64/bin/SDL2.dll output/
          
          # 显示最终文件列表
          echo "打包的文件列表:"
          ls -l output/

      - name: 上传最终产物
        uses: actions/upload-artifact@v4
        with:
          name: scrcpy-v3.3.1-客户端
          path: output/*
