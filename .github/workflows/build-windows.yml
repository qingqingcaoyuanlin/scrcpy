name: Build scrcpy for Windows

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Genymobile/scrcpy
          ref: master

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-ffmpeg
            unzip

      - name: Set up JDK 17  # 升级到 Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
          java-package: jdk
          architecture: x64

      - name: Install Android SDK Command-line Tools
        shell: pwsh
        run: |
          # 创建Android SDK目录
          New-Item -ItemType Directory -Force -Path "$env:ANDROID_HOME/cmdline-tools"
          Set-Location "$env:ANDROID_HOME/cmdline-tools"
          
          # 下载最新的命令行工具
          $url = "https://dl.google.com/android/repository/commandlinetools-win-10406996_latest.zip"
          $output = "cmdline-tools.zip"
          Invoke-WebRequest -Uri $url -OutFile $output
          
          # 解压文件
          Expand-Archive -Path $output -DestinationPath . -Force
          Move-Item -Path "cmdline-tools" -Destination "latest" -Force
          
          # 接受许可证（循环输出多个y以确保所有许可证都被接受）
          for ($i=0; $i -lt 10; $i++) { Write-Output "y" } | & "$env:ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager.bat" --licenses
          
          # 安装所需组件
          Write-Output "y" | & "$env:ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager.bat" "ndk;25.2.9519653" "platform-tools" "build-tools;33.0.2"
        env:
          ANDROID_HOME: ${{ runner.tool_cache }}/android-sdk

      - name: Build server
        shell: msys2 {0}
        run: |
          cd app
          ./gradlew assembleDebug
          cd ..
        env:
          ANDROID_HOME: ${{ runner.tool_cache }}/android-sdk

      - name: Build client
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          export ANDROID_NDK_HOME="${{ runner.tool_cache }}/android-sdk/ndk/25.2.9519653"
          meson setup build --cross-file scripts/mingw64.txt --buildtype=release
          ninja -C build
        env:
          ANDROID_HOME: ${{ runner.tool_cache }}/android-sdk

      - name: Collect artifacts
        shell: msys2 {0}
        run: |
          mkdir -p dist
          cp build/scrcpy.exe dist/
          cp app/build/outputs/apk/debug/app-debug.jar dist/scrcpy-server.jar
          cp /mingw64/bin/*.dll dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scrcpy-windows-build
          path: dist/
          retention-days: 7
